@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<hr />

<button @onclick="SetLocalStorage">SetLocalStorage</button>
<button @onclick="GetLocalStorage">GetLocalStorage</button>


<hr />

<div>Screen Height: @Height</div>
<div>Screen Height: @Width</div>
<div>Screen AvailHeight: @AvailHeight</div>
<div>Screen AvailWidth: @AvailWidth</div>
<div>Screen ColorDepth: @ColorDepth</div>
<div>Screen PixelDepth: @PixelDepth</div>

<hr />

<button @onclick="SetCookie">SetCookie</button>
<button @onclick="GetCookie">GetCookie</button>

<hr />

<button @onclick="Window.History.Back">Back</button>
<button @onclick="Window.History.Forward">Forward</button>

<hr />

<Alert Color="BsColors.danger">
    @userAgent
</Alert>

<hr />

<Alert Color="BsColors.danger">
    A simple secondary alert—check it out!
</Alert>

<hr />

<AccordionControl>
    <AccordionItem Text="Page 1">Test 1</AccordionItem>
    <AccordionItem Text="Page 2">Test 2</AccordionItem>
</AccordionControl>

<hr />

<TabControl>
    <TabPage Text="Tab 1">
        <h1>The first tab</h1>
    </TabPage>
    <TabPage Text="Tab 2">
        <h1>The second tab</h1>
    </TabPage>
    <TabPage Text="Tab 3">
        <h1>The third tab</h1>
    </TabPage>
</TabControl>

@code{
    [Inject] public IMetaData MetaData { get; set; }

    [Inject] public IWindow Window { get; set; }

    [Inject] public ILocalStorage LocalStorage { get; set; }

    private string userAgent;

    private int Height;
    private int Width;
    private int AvailHeight;
    private int AvailWidth;
    private int ColorDepth;
    private int PixelDepth;

    public string MyProperty { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await MetaData.Tag("Title", "MyBlazor Title");
        await MetaData.Tag("Description", "MyBlazor Description");
        await MetaData.Favicon("/favicon.png");

        userAgent = await Window.Navigator.UserAgent();

        Height = await Window.Screen.Height();
        Width = await Window.Screen.Width();
        AvailHeight = await Window.Screen.AvailHeight();
        AvailWidth = await Window.Screen.AvailWidth();
        ColorDepth = await Window.Screen.ColorDepth();
        PixelDepth = await Window.Screen.PixelDepth();

        MyProperty = "This is the test";
    }

    public async Task SetCookie()
    {
        await Window.Cookie.Set("cookieName", "cookie value", 7);
    }

    public async Task GetCookie()
    {
        var cookie = await Window.Cookie.Get("cookieName");

        await Window.Alert(cookie);
    }

    public async Task SetLocalStorage()
    {
        await LocalStorage.Set(()=>MyProperty);
    }

    public async Task GetLocalStorage()
    {
        var test = await LocalStorage.Get(() => MyProperty);

        await Window.Alert(test);
    }
}